version: '3.7'

services:

  django:
    container_name: caregivers-django
    build:
      context: ./backend/
    environment:
      - APP_ENV=development
      - DB_NAME=caregivers
      - DB_USERNAME=caregivers
      - DB_PASSWORD=caregivers
      - DB_HOSTNAME=postgres
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=admin
      - EMAIL_HOST_USER=example@example.com
      - EMAIL_HOST_PASSWORD=XXXXXXXXXX
      - CORS_ALLOWED_ORIGIN=http://localhost:3000
      - ALLOWED_HOST=localhost
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    volumes:
      - ./backend/scripts:/app/scripts/
      - ./backend/requirements:/app/requirements
      - ./backend/src:/app/src/

  postgres:
    container_name: caregivers-postgres
    image: postgres:14
    environment:
      - POSTGRES_PASSWORD=caregivers
      - POSTGRES_USER=caregivers
      - POSTGRES_DB=caregivers
    volumes:
      - caregivers-postgres-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: caregivers-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "8080:80"
    depends_on:
      - postgres
    volumes:
      - caregivers-pgadmin-data:/var/lib/pgadmin

  nextjs:
    container_name: caregivers-nextjs
    ports:
      - "3000:3000"
    build:
      context: ./frontend
    environment:
      - BASE_URL=http://localhost:3000
      - STATIC_DIR=/
      - API_URL=http://localhost:8000/api/v1
    volumes:
      - ./frontend:/usr/app/
    command: sh -c 'npm install && npm run dev'

volumes:
  caregivers-postgres-data:
  caregivers-pgadmin-data:
